
1)	Write a C program to achieve the following  
a.	Get two file names command line arguments 
b.	First file is input file and second is output file
c.	Read input lines by line
d.	Tokenize the line to get tokens (separated by comma(,), space, semicolon(;) etc)
e.	Write line, no. of tokens  and the tokens in o/p file

2)	Write a C program to achieve the following  
a.	Get two strings through command line arguments 
b.	One string is a search string and another string is the replacement string 
c.	Read input files and produce output files, in which the search string got replaced by  the replacement string
(Note that the search string may need to be replaced multiple times, in a line.)
d.	If  the name of  the input file is “input_1.txt” the name of  the output file should be “input_1.txt.out” (that is a new file got created with the string 
“out” appended to its name.
e.	There may be more than one input file and their names are kept in a config file (say config.txt), which the software needs to read.
          
3)	Consider two text files. The first one is having a list of employees and their department numbers stored ( that is empid, ename, deptid, and there is one record  per  line). The second one is having the departments along with  their names and location (that is deptid, deptname, dlocation). Read the files and construct  structures having  all this data (that is empid, ename, deptid, dname, dlocation). Display the list of structures and save this information in another file.
4)	Write a C program to achieve the following
a.	Read the name of one input file and 1 output file through command line.
b.	Read all the words from the input file, remove duplicates and then store the words in the output file one on each line.
c.	Please think of good method to remove duplicates. 


5)	Write a C program to achieve the following
a.	Read the name of one input file and 2 output files (through user input)
b.	The input file is having text data like (employeeid, employeename, salary, departmentid)
c.	You need to read the data and produce two output files. One output file will be having data sorted on employee name, and another output file will be having data sorted on employee number.  

